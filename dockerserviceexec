#!/usr/bin/env bash

# {{ ansible_managed }}

set -e
set -o pipefail
set -u

# --------------------------------------------------------------------------------------
# parse parameters 

if [[ $# < 2 ]] ; then
	echo ""
	echo "Usage:"
	echo "$0 <SERVICE_NAME> <EXEC_COMMAND>"
	echo ""
	echo "Examples:"
	echo "$0 base_reverseproxy openresty -s reload"
	echo "$0 base_reverseproxy bash"
	echo ""
	echo "Allows exec in a container running on another node in this swarm by using ssh."
	echo "Set SSH_OPTS environment variable to customise the ssh command."
	exit 1
else
	SERVICE="$1"
	shift
	COMMAND="$@"
fi

SSH_OPTS=${SSH_OPTS:="-l ${USER}"}

# --------------------------------------------------------------------------------------
# look for dependencies

if ! which dockernodeps > /dev/null ; then 
	echo "dependency 'dockernodeps' not found in PATH. exiting."
	exit 1
fi

# --------------------------------------------------------------------------------------

if PAIR=$(dockernodeps "$SERVICE") ; then
  NODE=${PAIR%%:*}
  CONTAINER=${PAIR#*:}
else
  exit 1
fi

# --------------------------------------------------------------------------------------

# check if tty is present (because no tty is present when running from gitlab-deployment with gitlab-runner and docker-in-docker)
if [ -t 0 ] ; then
  SSH_OPTS="-t ${SSH_OPTS}"
  EXEC_OPTS="-it"
else
  EXEC_OPTS="-i"
fi

set -x
echo ssh "$SSH_OPTS" "$NODE" docker exec "$EXEC_OPTS" "$CONTAINER" "$COMMAND"
# shellcheck disable=SC2029
ssh "$SSH_OPTS" "$NODE" docker exec "$EXEC_OPTS" "$CONTAINER" "$COMMAND"
